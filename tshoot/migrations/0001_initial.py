# Generated by Django 3.2.7 on 2023-12-09 14:59

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiKeys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apikey', models.CharField(db_column='apiKey', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('allowedips', models.TextField(blank=True, db_column='allowedIPs', null=True)),
                ('created', models.DateTimeField()),
                ('lastseenat', models.DateTimeField(blank=True, db_column='lastseenAt', null=True)),
                ('lastseenfrom', models.CharField(blank=True, db_column='lastseenFrom', max_length=255, null=True)),
            ],
            options={
                'db_table': 'api_keys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bgpsessiondata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srcipaddressid', models.IntegerField(blank=True, null=True)),
                ('dstipaddressid', models.IntegerField(blank=True, null=True)),
                ('protocol', models.IntegerField(blank=True, null=True)),
                ('vlan', models.IntegerField(blank=True, null=True)),
                ('packetcount', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'bgpsessiondata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BgpSessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srcipaddressid', models.IntegerField()),
                ('protocol', models.IntegerField()),
                ('dstipaddressid', models.IntegerField()),
                ('packetcount', models.IntegerField()),
                ('last_seen', models.DateTimeField()),
                ('source', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'bgp_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('cololocation', models.CharField(blank=True, max_length=255, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('u_counts_from', models.SmallIntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cabinet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyBillingDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billingcontactname', models.CharField(blank=True, db_column='billingContactName', max_length=255, null=True)),
                ('billingaddress1', models.CharField(blank=True, db_column='billingAddress1', max_length=255, null=True)),
                ('billingaddress2', models.CharField(blank=True, db_column='billingAddress2', max_length=255, null=True)),
                ('billingaddress3', models.CharField(blank=True, db_column='billingAddress3', max_length=255, null=True)),
                ('billingtowncity', models.CharField(blank=True, db_column='billingTownCity', max_length=255, null=True)),
                ('billingpostcode', models.CharField(blank=True, db_column='billingPostcode', max_length=255, null=True)),
                ('billingcountry', models.CharField(blank=True, db_column='billingCountry', max_length=255, null=True)),
                ('billingemail', models.CharField(blank=True, db_column='billingEmail', max_length=255, null=True)),
                ('billingtelephone', models.CharField(blank=True, db_column='billingTelephone', max_length=255, null=True)),
                ('vatnumber', models.CharField(blank=True, db_column='vatNumber', max_length=255, null=True)),
                ('vatrate', models.CharField(blank=True, db_column='vatRate', max_length=255, null=True)),
                ('purchaseorderrequired', models.IntegerField(db_column='purchaseOrderRequired')),
                ('invoicemethod', models.CharField(blank=True, db_column='invoiceMethod', max_length=255, null=True)),
                ('invoiceemail', models.CharField(blank=True, db_column='invoiceEmail', max_length=255, null=True)),
                ('billingfrequency', models.CharField(blank=True, db_column='billingFrequency', max_length=255, null=True)),
            ],
            options={
                'db_table': 'company_billing_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyRegistrationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registeredname', models.CharField(blank=True, db_column='registeredName', max_length=255, null=True)),
                ('companynumber', models.CharField(blank=True, db_column='companyNumber', max_length=255, null=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('address3', models.CharField(blank=True, max_length=255, null=True)),
                ('towncity', models.CharField(blank=True, db_column='townCity', max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'company_registration_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsoleServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='serialNumber', max_length=255, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'console_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Consoleserverconnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switchid', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.CharField(blank=True, max_length=255, null=True)),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('parity', models.IntegerField(blank=True, null=True)),
                ('stopbits', models.IntegerField(blank=True, null=True)),
                ('flowcontrol', models.IntegerField(blank=True, null=True)),
                ('autobaud', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consoleserverconnection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('facilityaccess', models.IntegerField()),
                ('mayauthorize', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('lastupdated', models.DateTimeField(blank=True, null=True)),
                ('lastupdatedby', models.IntegerField(blank=True, null=True)),
                ('creator', models.CharField(blank=True, max_length=32, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactGroup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=20)),
                ('active', models.IntegerField()),
                ('limited_to', models.IntegerField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'contact_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Corebundles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('graph_title', models.CharField(max_length=255)),
                ('bfd', models.IntegerField()),
                ('ipv4_subnet', models.CharField(blank=True, max_length=18, null=True)),
                ('ipv6_subnet', models.CharField(blank=True, max_length=43, null=True)),
                ('stp', models.IntegerField()),
                ('cost', models.PositiveIntegerField(blank=True, null=True)),
                ('preference', models.PositiveIntegerField(blank=True, null=True)),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'corebundles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coreinterfaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'coreinterfaces',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cust',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('shortname', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('abbreviatedname', models.CharField(blank=True, db_column='abbreviatedName', max_length=30, null=True)),
                ('autsys', models.IntegerField(blank=True, null=True)),
                ('maxprefixes', models.IntegerField(blank=True, null=True)),
                ('peeringemail', models.CharField(blank=True, max_length=255, null=True)),
                ('nocphone', models.CharField(blank=True, max_length=255, null=True)),
                ('noc24hphone', models.CharField(blank=True, max_length=255, null=True)),
                ('nocfax', models.CharField(blank=True, max_length=255, null=True)),
                ('nocemail', models.CharField(blank=True, max_length=255, null=True)),
                ('nochours', models.CharField(blank=True, max_length=255, null=True)),
                ('nocwww', models.CharField(blank=True, max_length=255, null=True)),
                ('peeringmacro', models.CharField(blank=True, max_length=255, null=True)),
                ('peeringmacrov6', models.CharField(blank=True, max_length=255, null=True)),
                ('peeringpolicy', models.CharField(blank=True, max_length=255, null=True)),
                ('corpwww', models.CharField(blank=True, max_length=255, null=True)),
                ('datejoin', models.DateField(blank=True, null=True)),
                ('dateleave', models.DateField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('activepeeringmatrix', models.IntegerField(blank=True, null=True)),
                ('lastupdated', models.DateField(blank=True, null=True)),
                ('lastupdatedby', models.IntegerField(blank=True, null=True)),
                ('creator', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('md5support', models.CharField(blank=True, db_column='MD5Support', max_length=255, null=True)),
                ('isreseller', models.IntegerField(db_column='isReseller')),
                ('in_manrs', models.IntegerField()),
                ('in_peeringdb', models.IntegerField()),
                ('peeringdb_oauth', models.IntegerField()),
            ],
            options={
                'db_table': 'cust',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Custkit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('descr', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'custkit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustNotes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('private', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('note', models.TextField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'cust_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerToUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privs', models.IntegerField()),
                ('extra_attributes', models.JSONField(blank=True, null=True)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
                ('last_login_from', models.TextField(blank=True, null=True)),
                ('last_login_via', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_to_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True)),
                ('display_as', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('internal_only', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'cust_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocstoreCustomerDirectories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parent_dir_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'docstore_customer_directories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocstoreCustomerFiles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('disk', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=255)),
                ('sha256', models.CharField(blank=True, max_length=64, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_privs', models.SmallIntegerField()),
                ('file_last_updated', models.DateTimeField()),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'docstore_customer_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocstoreDirectories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parent_dir_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'docstore_directories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocstoreFiles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('disk', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=255)),
                ('sha256', models.CharField(blank=True, max_length=64, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_privs', models.SmallIntegerField()),
                ('file_last_updated', models.DateTimeField()),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'docstore_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocstoreLogs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('downloaded_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'docstore_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FailedJobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'failed_jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('shortname', models.CharField(blank=True, max_length=255, null=True)),
                ('isprimary', models.IntegerField(db_column='isPrimary')),
                ('peeringdb_ix_id', models.BigIntegerField(blank=True, null=True)),
                ('ixf_ix_id', models.BigIntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'infrastructure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipv4Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'ipv4address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipv6Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'ipv6address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrrdbAsn',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('asn', models.PositiveIntegerField()),
                ('protocol', models.IntegerField()),
                ('first_seen', models.DateTimeField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'irrdb_asn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Irrdbconfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('protocol', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'irrdbconfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrrdbPrefix',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('prefix', models.CharField(max_length=255)),
                ('protocol', models.IntegerField()),
                ('first_seen', models.DateTimeField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'irrdb_prefix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ixp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('shortname', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('address3', models.CharField(blank=True, max_length=255, null=True)),
                ('address4', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ixp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='L2Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(blank=True, max_length=12, null=True)),
                ('firstseen', models.DateTimeField(blank=True, null=True)),
                ('lastseen', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'l2address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb_facility_id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('shortname', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('nocphone', models.CharField(blank=True, max_length=255, null=True)),
                ('nocfax', models.CharField(blank=True, max_length=255, null=True)),
                ('nocemail', models.CharField(blank=True, max_length=255, null=True)),
                ('officephone', models.CharField(blank=True, max_length=255, null=True)),
                ('officefax', models.CharField(blank=True, max_length=255, null=True)),
                ('officeemail', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
                ('stored_name', models.CharField(max_length=255)),
                ('uploaded_by', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField()),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
            ],
            options={
                'db_table': 'logos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Macaddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstseen', models.DateTimeField(blank=True, null=True)),
                ('lastseen', models.DateTimeField(blank=True, null=True)),
                ('mac', models.CharField(blank=True, max_length=12, null=True)),
            ],
            options={
                'db_table': 'macaddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Netinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.IntegerField()),
                ('property', models.CharField(max_length=255)),
                ('ix', models.IntegerField()),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'netinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Networkinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.IntegerField(blank=True, null=True)),
                ('network', models.CharField(blank=True, max_length=255, null=True)),
                ('masklen', models.IntegerField(blank=True, null=True)),
                ('rs1address', models.CharField(blank=True, max_length=40, null=True)),
                ('rs2address', models.CharField(blank=True, max_length=40, null=True)),
                ('dnsfile', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'networkinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Oui',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oui', models.CharField(max_length=6, unique=True)),
                ('organisation', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'oui',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_resets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('colo_reference', models.CharField(max_length=255)),
                ('cable_type', models.IntegerField()),
                ('connector_type', models.IntegerField()),
                ('installation_date', models.DateTimeField(blank=True, null=True)),
                ('port_prefix', models.CharField(max_length=10)),
                ('chargeable', models.IntegerField()),
                ('location_notes', models.TextField()),
                ('active', models.IntegerField()),
                ('u_position', models.IntegerField(blank=True, null=True)),
                ('mounted_at', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patch_panel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPanelPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.SmallIntegerField()),
                ('state', models.IntegerField()),
                ('colo_circuit_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('colo_billing_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('private_notes', models.TextField(blank=True, null=True)),
                ('assigned_at', models.DateField(blank=True, null=True)),
                ('connected_at', models.DateField(blank=True, null=True)),
                ('cease_requested_at', models.DateField(blank=True, null=True)),
                ('ceased_at', models.DateField(blank=True, null=True)),
                ('last_state_change', models.DateField(blank=True, null=True)),
                ('internal_use', models.IntegerField()),
                ('chargeable', models.IntegerField()),
                ('owned_by', models.IntegerField()),
                ('loa_code', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'patch_panel_port',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPanelPortFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField()),
                ('uploaded_by', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('is_private', models.IntegerField()),
                ('storage_location', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'patch_panel_port_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPanelPortHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.SmallIntegerField()),
                ('state', models.IntegerField()),
                ('colo_circuit_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('colo_billing_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('private_notes', models.TextField(blank=True, null=True)),
                ('assigned_at', models.DateField(blank=True, null=True)),
                ('connected_at', models.DateField(blank=True, null=True)),
                ('cease_requested_at', models.DateField(blank=True, null=True)),
                ('ceased_at', models.DateField(blank=True, null=True)),
                ('internal_use', models.IntegerField()),
                ('chargeable', models.IntegerField()),
                ('owned_by', models.IntegerField()),
                ('cust_id', models.IntegerField(blank=True, null=True)),
                ('customer', models.CharField(blank=True, max_length=255, null=True)),
                ('switchport', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'patch_panel_port_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPanelPortHistoryFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField()),
                ('uploaded_by', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('is_private', models.IntegerField()),
                ('storage_location', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'patch_panel_port_history_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physicalinterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(blank=True, null=True)),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('duplex', models.CharField(blank=True, max_length=16, null=True)),
                ('autoneg', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'physicalinterface',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Routers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle', models.CharField(max_length=255, unique=True)),
                ('protocol', models.PositiveSmallIntegerField()),
                ('type', models.PositiveSmallIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('shortname', models.CharField(max_length=255)),
                ('router_id', models.CharField(max_length=255)),
                ('peering_ip', models.CharField(max_length=255)),
                ('asn', models.PositiveIntegerField()),
                ('software', models.CharField(max_length=255)),
                ('software_version', models.CharField(blank=True, max_length=255, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=255, null=True)),
                ('operating_system_version', models.CharField(blank=True, max_length=255, null=True)),
                ('mgmt_host', models.CharField(max_length=255)),
                ('api', models.CharField(blank=True, max_length=255, null=True)),
                ('api_type', models.PositiveSmallIntegerField()),
                ('lg_access', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quarantine', models.IntegerField()),
                ('bgp_lc', models.IntegerField()),
                ('rpki', models.IntegerField()),
                ('rfc1997_passthru', models.IntegerField()),
                ('template', models.CharField(max_length=255)),
                ('skip_md5', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'routers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RsPrefixes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=64, null=True)),
                ('protocol', models.IntegerField(blank=True, null=True)),
                ('irrdb', models.IntegerField(blank=True, null=True)),
                ('rs_origin', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rs_prefixes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('payload', models.TextField()),
                ('last_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SflowReceiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dst_ip', models.CharField(max_length=255)),
                ('dst_port', models.IntegerField()),
            ],
            options={
                'db_table': 'sflow_receiver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('asn', models.PositiveIntegerField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('mgmt_mac_address', models.CharField(blank=True, max_length=12, null=True)),
                ('loopback_ip', models.CharField(blank=True, max_length=39, null=True, unique=True)),
                ('loopback_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ipv4addr', models.CharField(blank=True, max_length=255, null=True)),
                ('ipv6addr', models.CharField(blank=True, max_length=255, null=True)),
                ('snmppasswd', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('poll', models.IntegerField()),
                ('os', models.CharField(blank=True, max_length=255, null=True)),
                ('osdate', models.DateTimeField(blank=True, db_column='osDate', null=True)),
                ('osversion', models.CharField(blank=True, db_column='osVersion', max_length=255, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='serialNumber', max_length=255, null=True)),
                ('mausupported', models.IntegerField(blank=True, db_column='mauSupported', null=True)),
                ('lastpolled', models.DateTimeField(blank=True, db_column='lastPolled', null=True)),
                ('snmp_engine_time', models.BigIntegerField(blank=True, null=True)),
                ('snmp_system_uptime', models.BigIntegerField(blank=True, null=True)),
                ('snmp_engine_boots', models.BigIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'switch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Switchport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.IntegerField()),
                ('ifindex', models.IntegerField(blank=True, db_column='ifIndex', null=True)),
                ('ifname', models.CharField(blank=True, db_column='ifName', max_length=255, null=True)),
                ('ifalias', models.CharField(blank=True, db_column='ifAlias', max_length=255, null=True)),
                ('ifhighspeed', models.IntegerField(blank=True, db_column='ifHighSpeed', null=True)),
                ('ifmtu', models.IntegerField(blank=True, db_column='ifMtu', null=True)),
                ('ifphysaddress', models.CharField(blank=True, db_column='ifPhysAddress', max_length=17, null=True)),
                ('ifadminstatus', models.IntegerField(blank=True, db_column='ifAdminStatus', null=True)),
                ('ifoperstatus', models.IntegerField(blank=True, db_column='ifOperStatus', null=True)),
                ('iflastchange', models.IntegerField(blank=True, db_column='ifLastChange', null=True)),
                ('lastsnmppoll', models.DateTimeField(blank=True, db_column='lastSnmpPoll', null=True)),
                ('lagifindex', models.IntegerField(blank=True, db_column='lagIfIndex', null=True)),
                ('mautype', models.CharField(blank=True, db_column='mauType', max_length=255, null=True)),
                ('maustate', models.CharField(blank=True, db_column='mauState', max_length=255, null=True)),
                ('mauavailability', models.CharField(blank=True, db_column='mauAvailability', max_length=255, null=True)),
                ('maujacktype', models.CharField(blank=True, db_column='mauJacktype', max_length=255, null=True)),
                ('mauautonegsupported', models.IntegerField(blank=True, db_column='mauAutoNegSupported', null=True)),
                ('mauautonegadminstate', models.IntegerField(blank=True, db_column='mauAutoNegAdminState', null=True)),
            ],
            options={
                'db_table': 'switchport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelescopeEntries',
            fields=[
                ('sequence', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=36, unique=True)),
                ('batch_id', models.CharField(max_length=36)),
                ('family_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('should_display_on_index', models.IntegerField()),
                ('type', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'telescope_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelescopeEntriesTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'telescope_entries_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelescopeMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'telescope_monitoring',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Traffic95Th',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('average', models.BigIntegerField(blank=True, null=True)),
                ('max', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'traffic_95th',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Traffic95ThMonthly',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('month', models.DateField(blank=True, null=True)),
                ('max_95th', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'traffic_95th_monthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrafficDaily',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('day', models.DateField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=10, null=True)),
                ('day_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('day_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('day_max_in', models.BigIntegerField(blank=True, null=True)),
                ('day_max_out', models.BigIntegerField(blank=True, null=True)),
                ('day_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('day_tot_out', models.BigIntegerField(blank=True, null=True)),
                ('week_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('week_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('week_max_in', models.BigIntegerField(blank=True, null=True)),
                ('week_max_out', models.BigIntegerField(blank=True, null=True)),
                ('week_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('week_tot_out', models.BigIntegerField(blank=True, null=True)),
                ('month_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('month_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('month_max_in', models.BigIntegerField(blank=True, null=True)),
                ('month_max_out', models.BigIntegerField(blank=True, null=True)),
                ('month_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('month_tot_out', models.BigIntegerField(blank=True, null=True)),
                ('year_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('year_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('year_max_in', models.BigIntegerField(blank=True, null=True)),
                ('year_max_out', models.BigIntegerField(blank=True, null=True)),
                ('year_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('year_tot_out', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'traffic_daily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrafficDailyPhysInts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('day', models.DateField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=10, null=True)),
                ('day_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('day_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('day_max_in', models.BigIntegerField(blank=True, null=True)),
                ('day_max_out', models.BigIntegerField(blank=True, null=True)),
                ('day_max_in_at', models.DateTimeField(blank=True, null=True)),
                ('day_max_out_at', models.DateTimeField(blank=True, null=True)),
                ('day_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('day_tot_out', models.BigIntegerField(blank=True, null=True)),
                ('week_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('week_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('week_max_in', models.BigIntegerField(blank=True, null=True)),
                ('week_max_out', models.BigIntegerField(blank=True, null=True)),
                ('week_max_in_at', models.DateTimeField(blank=True, null=True)),
                ('week_max_out_at', models.DateTimeField(blank=True, null=True)),
                ('week_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('week_tot_out', models.BigIntegerField(blank=True, null=True)),
                ('month_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('month_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('month_max_in', models.BigIntegerField(blank=True, null=True)),
                ('month_max_out', models.BigIntegerField(blank=True, null=True)),
                ('month_max_in_at', models.DateTimeField(blank=True, null=True)),
                ('month_max_out_at', models.DateTimeField(blank=True, null=True)),
                ('month_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('month_tot_out', models.BigIntegerField(blank=True, null=True)),
                ('year_avg_in', models.BigIntegerField(blank=True, null=True)),
                ('year_avg_out', models.BigIntegerField(blank=True, null=True)),
                ('year_max_in', models.BigIntegerField(blank=True, null=True)),
                ('year_max_out', models.BigIntegerField(blank=True, null=True)),
                ('year_max_in_at', models.DateTimeField(blank=True, null=True)),
                ('year_max_out_at', models.DateTimeField(blank=True, null=True)),
                ('year_tot_in', models.BigIntegerField(blank=True, null=True)),
                ('year_tot_out', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'traffic_daily_phys_ints',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('authorisedmobile', models.CharField(blank=True, db_column='authorisedMobile', max_length=30, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('privs', models.IntegerField(blank=True, null=True)),
                ('disabled', models.IntegerField(blank=True, null=True)),
                ('peeringdb_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('extra_attributes', models.JSONField(blank=True, null=True)),
                ('lastupdated', models.DateTimeField(blank=True, null=True)),
                ('lastupdatedby', models.IntegerField(blank=True, null=True)),
                ('creator', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User2Fa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.IntegerField()),
                ('secret', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_2fa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLogins',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('ip', models.CharField(max_length=39)),
                ('at', models.DateTimeField()),
                ('via', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'user_logins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPref',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, max_length=255, null=True)),
                ('ix', models.IntegerField()),
                ('op', models.CharField(blank=True, max_length=2, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('expire', models.BigIntegerField()),
            ],
            options={
                'db_table': 'user_pref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRememberTokens',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255)),
                ('device', models.CharField(max_length=255)),
                ('ip', models.CharField(max_length=39)),
                ('created', models.DateTimeField()),
                ('expires', models.DateTimeField()),
                ('is_2fa_complete', models.IntegerField()),
            ],
            options={
                'db_table': 'user_remember_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('shortname', models.CharField(blank=True, max_length=255, null=True)),
                ('nagios_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bundle_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vendor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Virtualinterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('mtu', models.IntegerField(blank=True, null=True)),
                ('trunk', models.IntegerField(blank=True, null=True)),
                ('channelgroup', models.IntegerField(blank=True, null=True)),
                ('lag_framing', models.IntegerField()),
                ('fastlacp', models.IntegerField()),
            ],
            options={
                'db_table': 'virtualinterface',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('config_name', models.CharField(blank=True, max_length=32, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('private', models.IntegerField()),
                ('peering_matrix', models.IntegerField()),
                ('peering_manager', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vlan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vlaninterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipv4enabled', models.IntegerField(blank=True, null=True)),
                ('ipv4hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('ipv6enabled', models.IntegerField(blank=True, null=True)),
                ('ipv6hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('mcastenabled', models.IntegerField(blank=True, null=True)),
                ('irrdbfilter', models.IntegerField(blank=True, null=True)),
                ('bgpmd5secret', models.CharField(blank=True, max_length=255, null=True)),
                ('ipv4bgpmd5secret', models.CharField(blank=True, max_length=255, null=True)),
                ('ipv6bgpmd5secret', models.CharField(blank=True, max_length=255, null=True)),
                ('maxbgpprefix', models.IntegerField(blank=True, null=True)),
                ('rsclient', models.IntegerField(blank=True, null=True)),
                ('rsmorespecifics', models.IntegerField()),
                ('ipv4canping', models.IntegerField(blank=True, null=True)),
                ('ipv6canping', models.IntegerField(blank=True, null=True)),
                ('ipv4monitorrcbgp', models.IntegerField(blank=True, null=True)),
                ('ipv6monitorrcbgp', models.IntegerField(blank=True, null=True)),
                ('as112client', models.IntegerField(blank=True, null=True)),
                ('busyhost', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vlaninterface',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwitchMain',
            fields=[
                ('switchid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ipv4addr', models.CharField(max_length=255, unique=True)),
                ('infrastructure', models.CharField(blank=True, max_length=50, null=True)),
                ('vendor', models.CharField(max_length=255)),
                ('pop', models.CharField(choices=[('IXPN-ABJ-MED', 'Medallion, Abuja'), ('IXPN-LOS-MED', 'Medallion, Lagos'), ('IXPN-LOS-RC', 'Rackcentre, Lagos'), ('IXPN-LOS-MDX', 'MDXI, Lagos'), ('IXPN-LOS-ADC', 'ADC, Lagos'), ('IXPN-LOS-ICN', 'ICNL, Lagos'), ('IXPN-PHC-ICNL', 'ICNL, PHC'), ('IXPN-KAN-LIB', 'Kano Library, KANO')], default='Others', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ContactToGroup',
            fields=[
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tshoot.contact')),
            ],
            options={
                'db_table': 'contact_to_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerToIxp',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tshoot.cust')),
            ],
            options={
                'db_table': 'customer_to_ixp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustToCustTag',
            fields=[
                ('customer_tag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tshoot.custtag')),
            ],
            options={
                'db_table': 'cust_to_cust_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('asn', models.IntegerField(blank=True, null=True)),
                ('ipv4addr', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('ipv6addr', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('connected_ports', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), size=None)),
                ('switch_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('peering_policy', models.CharField(max_length=255)),
                ('channelgroup', models.IntegerField(blank=True, null=True)),
                ('ipv6_enabled', models.BooleanField(default=False)),
                ('speed', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), blank=True, null=True, size=None)),
                ('switchid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tshoot.switchmain')),
            ],
        ),
    ]
